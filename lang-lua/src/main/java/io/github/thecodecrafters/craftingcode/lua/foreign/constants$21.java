// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$21 {

    static final FunctionDescriptor luaL_optinteger$FUNC = FunctionDescriptor.of(C_LONG_LONG,
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle luaL_optinteger$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_optinteger",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)J",
        constants$21.luaL_optinteger$FUNC, false
    );
    static final FunctionDescriptor luaL_checkstack$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_checkstack$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checkstack",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$21.luaL_checkstack$FUNC, false
    );
    static final FunctionDescriptor luaL_checktype$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle luaL_checktype$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checktype",
        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
        constants$21.luaL_checktype$FUNC, false
    );
    static final FunctionDescriptor luaL_checkany$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle luaL_checkany$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checkany",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$21.luaL_checkany$FUNC, false
    );
    static final FunctionDescriptor luaL_newmetatable$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle luaL_newmetatable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_newmetatable",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$21.luaL_newmetatable$FUNC, false
    );
    static final FunctionDescriptor luaL_setmetatable$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle luaL_setmetatable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_setmetatable",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$21.luaL_setmetatable$FUNC, false
    );
}



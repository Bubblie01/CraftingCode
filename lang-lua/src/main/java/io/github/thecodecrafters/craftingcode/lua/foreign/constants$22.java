// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$22 {

    static final FunctionDescriptor luaL_testudata$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_testudata$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_testudata",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$22.luaL_testudata$FUNC, false
    );
    static final FunctionDescriptor luaL_checkudata$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_checkudata$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checkudata",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$22.luaL_checkudata$FUNC, false
    );
    static final FunctionDescriptor luaL_where$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle luaL_where$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_where",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$22.luaL_where$FUNC, false
    );
    static final FunctionDescriptor luaL_error$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle luaL_error$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_error",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;[Ljava/lang/Object;)I",
        constants$22.luaL_error$FUNC, true
    );
    static final FunctionDescriptor luaL_checkoption$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle luaL_checkoption$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checkoption",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$22.luaL_checkoption$FUNC, false
    );
    static final FunctionDescriptor luaL_fileresult$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_fileresult$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_fileresult",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$22.luaL_fileresult$FUNC, false
    );
}



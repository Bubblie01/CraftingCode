// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$11 {

    static final FunctionDescriptor lua_setfield$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle lua_setfield$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_setfield",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$11.lua_setfield$FUNC, false
    );
    static final FunctionDescriptor lua_seti$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle lua_seti$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_seti",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)V",
        constants$11.lua_seti$FUNC, false
    );
    static final FunctionDescriptor lua_rawset$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_rawset$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_rawset",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$11.lua_rawset$FUNC, false
    );
    static final FunctionDescriptor lua_rawseti$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_LONG_LONG
    );
    static final MethodHandle lua_rawseti$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_rawseti",
        "(Ljdk/incubator/foreign/MemoryAddress;IJ)V",
        constants$11.lua_rawseti$FUNC, false
    );
    static final FunctionDescriptor lua_rawsetp$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle lua_rawsetp$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_rawsetp",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)V",
        constants$11.lua_rawsetp$FUNC, false
    );
    static final FunctionDescriptor lua_setmetatable$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_setmetatable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_setmetatable",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$11.lua_setmetatable$FUNC, false
    );
}



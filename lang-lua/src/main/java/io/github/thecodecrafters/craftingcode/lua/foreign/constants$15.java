// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$15 {

    static final FunctionDescriptor lua_Hook$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle lua_Hook$MH = RuntimeHelper.downcallHandle(
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$15.lua_Hook$FUNC, false
    );
    static final FunctionDescriptor lua_getstack$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle lua_getstack$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getstack",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$15.lua_getstack$FUNC, false
    );
    static final FunctionDescriptor lua_getinfo$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle lua_getinfo$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getinfo",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$15.lua_getinfo$FUNC, false
    );
    static final FunctionDescriptor lua_getlocal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_getlocal$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getlocal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$15.lua_getlocal$FUNC, false
    );
    static final FunctionDescriptor lua_setlocal$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_setlocal$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_setlocal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$15.lua_setlocal$FUNC, false
    );
    static final FunctionDescriptor lua_getupvalue$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle lua_getupvalue$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getupvalue",
        "(Ljdk/incubator/foreign/MemoryAddress;II)Ljdk/incubator/foreign/MemoryAddress;",
        constants$15.lua_getupvalue$FUNC, false
    );
}



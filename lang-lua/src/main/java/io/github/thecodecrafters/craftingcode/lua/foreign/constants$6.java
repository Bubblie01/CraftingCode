// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$6 {

    static final FunctionDescriptor lua_touserdata$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_touserdata$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_touserdata",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$6.lua_touserdata$FUNC, false
    );
    static final FunctionDescriptor lua_tothread$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_tothread$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_tothread",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$6.lua_tothread$FUNC, false
    );
    static final FunctionDescriptor lua_topointer$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_topointer$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_topointer",
        "(Ljdk/incubator/foreign/MemoryAddress;I)Ljdk/incubator/foreign/MemoryAddress;",
        constants$6.lua_topointer$FUNC, false
    );
    static final FunctionDescriptor lua_arith$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_arith$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_arith",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$6.lua_arith$FUNC, false
    );
    static final FunctionDescriptor lua_rawequal$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle lua_rawequal$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_rawequal",
        "(Ljdk/incubator/foreign/MemoryAddress;II)I",
        constants$6.lua_rawequal$FUNC, false
    );
    static final FunctionDescriptor lua_compare$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_INT,
        C_INT
    );
    static final MethodHandle lua_compare$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_compare",
        "(Ljdk/incubator/foreign/MemoryAddress;III)I",
        constants$6.lua_compare$FUNC, false
    );
}



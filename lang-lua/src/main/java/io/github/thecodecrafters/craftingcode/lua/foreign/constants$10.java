// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
import static jdk.incubator.foreign.MemoryLayouts.ADDRESS;

class constants$10 {

    static final FunctionDescriptor lua_createtable$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT,
        C_INT
    );
    static final MethodHandle lua_createtable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_createtable",
        "(Ljdk/incubator/foreign/MemoryAddress;II)V",
        constants$10.lua_createtable$FUNC, false
    );
    static final FunctionDescriptor lua_newuserdata$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        ADDRESS
    );
    static final MethodHandle lua_newuserdata$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_newuserdata",
        "(Ljdk/incubator/foreign/MemoryAddress;J)Ljdk/incubator/foreign/MemoryAddress;",
        constants$10.lua_newuserdata$FUNC, false
    );
    static final FunctionDescriptor lua_getmetatable$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_getmetatable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getmetatable",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$10.lua_getmetatable$FUNC, false
    );
    static final FunctionDescriptor lua_getuservalue$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_getuservalue$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_getuservalue",
        "(Ljdk/incubator/foreign/MemoryAddress;I)I",
        constants$10.lua_getuservalue$FUNC, false
    );
    static final FunctionDescriptor lua_setglobal$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle lua_setglobal$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_setglobal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)V",
        constants$10.lua_setglobal$FUNC, false
    );
    static final FunctionDescriptor lua_settable$FUNC = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_INT
    );
    static final MethodHandle lua_settable$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "lua_settable",
        "(Ljdk/incubator/foreign/MemoryAddress;I)V",
        constants$10.lua_settable$FUNC, false
    );
}



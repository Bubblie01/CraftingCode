// Generated by jextract

package io.github.thecodecrafters.craftingcode.lua.foreign;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;

import static io.github.thecodecrafters.craftingcode.lua.foreign.Lua.lua_Integer;
import static io.github.thecodecrafters.craftingcode.lua.foreign.Lua.lua_Number;
import static jdk.incubator.foreign.CLinker.*;
class constants$20 {

    static final FunctionDescriptor luaL_argerror$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_argerror$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_argerror",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        constants$20.luaL_argerror$FUNC, false
    );
    static final FunctionDescriptor luaL_checklstring$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final MethodHandle luaL_checklstring$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checklstring",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$20.luaL_checklstring$FUNC, false
    );
    static final FunctionDescriptor luaL_optlstring$FUNC = FunctionDescriptor.of(C_POINTER,
        C_POINTER,
        C_INT,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle luaL_optlstring$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_optlstring",
        "(Ljdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)Ljdk/incubator/foreign/MemoryAddress;",
        constants$20.luaL_optlstring$FUNC, false
    );
    static final FunctionDescriptor luaL_checknumber$FUNC = FunctionDescriptor.of(lua_Number,
        C_POINTER,
        C_INT
    );
    static final MethodHandle luaL_checknumber$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checknumber",
        "(Ljdk/incubator/foreign/MemoryAddress;I)D",
        constants$20.luaL_checknumber$FUNC, false
    );
    static final FunctionDescriptor luaL_optnumber$FUNC = FunctionDescriptor.of(lua_Number,
        C_POINTER,
        C_INT,
        lua_Number
    );
    static final MethodHandle luaL_optnumber$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_optnumber",
        "(Ljdk/incubator/foreign/MemoryAddress;ID)D",
        constants$20.luaL_optnumber$FUNC, false
    );
    static final FunctionDescriptor luaL_checkinteger$FUNC = FunctionDescriptor.of(lua_Integer,
        C_POINTER,
        C_INT
    );
    static final MethodHandle luaL_checkinteger$MH = RuntimeHelper.downcallHandle(
        Lua.LIBRARIES, "luaL_checkinteger",
        "(Ljdk/incubator/foreign/MemoryAddress;I)J",
        constants$20.luaL_checkinteger$FUNC, false
    );
}


